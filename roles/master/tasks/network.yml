---
# This playbook configures the network

###########################
# Interface Configuration #
###########################

- name: Configure network interface
  copy:
    dest: "/etc/sysconfig/network-scripts/ifcfg-{{ master_network.device }}"
    content: |
      #ANSIBLE-BEGIN
      # The contents below are automatically generated by Ansible. Do not modify.
      DEVICE={{ master_network.device }}
      ONBOOT=yes
      TYPE=Ethernet

      # DNS Configuration
      DNS1=8.8.8.8
      DNS2=8.8.4.4

      # IPv4 Configuration
      {% if master_network.ip_address and master_network.ip_address != 'dhcp' %}
      IPADDR={{ master_network.ip_address }}
      NETMASK={{ master_network.ip_netmask }}
      GATEWAY={{ master_network.ip_gateway }}
      BOOTPROTO=static
      {% elif master_network.ip_address == 'dhcp' %}
      BOOTPROTO=dhcp
      {% else %}
      BOOTPROTO=none
      {% endif %}

      # IPv6 Configuration
      {% if master_network.ip_v6_address and master_network.ip_v6_address != 'dhcp' %}
      IPV6ADDR={{ master_network.ip_v6_address }}
      IPV6_DEFAULTGW={{ master_network.ip_v6_gateway }}
      IPV6_AUTOCONF=no
      IPV6INIT=yes
      {% elif master_network.ip_v6_address == 'dhcp' %}
      IPV6_AUTOCONF=yes
      {% else %}
      IPV6INIT=no
      {% endif %}
      #ANSIBLE-END
  when: master_network.device is not none
  tags: interface-network

- name: Apply network changes
  shell: |
    nmcli device reapply {{ master_network.device }}
    systemctl restart NetworkManager
  when: master_network.device is not none
  tags: interface-network

###########################
# Hostname Configuration #
###########################

- name: Apply hostname
  hostname:
    name: "{{ master_network.hostname }}"
  when: master_network.hostname is not none
  tags: hostname-network
